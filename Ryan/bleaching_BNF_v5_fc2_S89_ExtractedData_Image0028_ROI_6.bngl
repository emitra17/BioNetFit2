# Filename: bleaching.bngl
#   This plain-text file is a BioNetGen input file.
#   It is derived from the supplemental BioNetGen input file of Kozer et al. (2014):
#     bi500182x_si_001.txt
#   Edits of this file were made by Brandon R. Thomas and William S. Hlavacek.
# Date of last modification: 18 June 2015
# A modified version of this file (suitable for processing by GenFit) is referred to 
# as Supplementary File S2 by Thomas et al.

setOption("SpeciesLabel","HNauty")

begin model

# A model for activation of the epidermal growth factor receptor (EGFR)
#   This model is an extension of the model of Kozer et al. (2013).

# References:
# Elleman TC et al. (2001) Biochemistry 40: 8930â€“8939.
# Faeder JR et al. (2009) Methods Mol Biol 500: 113-167.
# Kleiman et al. (2011) Mol Cell 43: 723-737.
# Kozer N et al. (2013) Mol BioSyst 9: 1849-1863.
# Kozer N et al. (2014) Biochemistry 53: 2594-2604.
# Low-Nam ST et al. (2011) Nat Struct Mol Biol 18: 1244-1249.
# Macdonald JL, Pike LJ (2008) Proc Natl Acad Sci USA 105: 112-117.
# Thomas BR et al. "GenFit: a fitting tool compatible with BioNetGen, NFsim, and distributed computing environments"

begin parameters

	NA 6.02214e14 # [=] number of molecules per nmol
	f 0.01 # fraction of cell to consider in simulation, dimensionless
	cellDen 6.0e8 # [=] number of cells per L
	Vo=f/cellDen # volume of fluid surrounding a single cell on average

	# See Table 1 in Kozer et al. (2013) for additional information about parameter values.
	# The unit system used here differs from that used in the study of Kozer et al. (2014).
	#   Here, we are using the unit system used by Kozer et al. (2014) and that recommended by Faeder et al. (2009).
	#   The two unit systems differ with respect to the unit used for abundance.
	#   Kozer et al. (2013) used nM, whereas Kozer et al. (2014) used molecules per cell.
	#   The two unit systems are related as follows: 1 nM = 1e6 molecules per cell.

	# It should be noted that BioNetGen treats rate constants as single-site rate constants. Thus, care must be taken to specify such rate constants, i.e., rate constants that do not incorporate statistical factors (which arise, for example, because a reactant has multiple indistinguishable copies of a reactive site) or factors that arise because of reactions that have the form A+A->product(s). See Faeder et al. (2009) for more details.

	##############################
	# [EGF] = 2 uM for series 85 #
	##############################
	LT_nM_S85	2000.0                   #  Total ligand concentration (nM). A default concentration of 30 nM was used in cases where the ligand dose was not varied. In dose-response analyses, this concentration is varied in the range 0.001-100 nM.  
	# convert from nM to molecules per cell
	LT_S85=LT_nM_S85*NA*Vo

	LT_nM_S77 100.0 # nM (Series 77)
	LT_S77=LT_nM_S77*NA*Vo

	LT_nM_S80 1.0 # nM (Series 80)
	LT_S80=LT_nM_S80*NA*Vo

	LT_nM_S89 0.0 # nM (Series 89) control
	LT_S89=LT_nM_S89*NA*Vo


	LT_nM_exp 0
	LT_exp LT_nM_exp*NA*Vo

	# RT_nM_exp 0.25 # nM
	#####################################
	# comment out the line above and    #
	# use the line below with BioNetFit #
	#####################################
	RT_nM_exp=RT_nM_exp_28_ROI_6__FREE__ # nM
	RT_exp=RT_nM_exp*NA*Vo
	ucf_exp=ucf_exp_28_ROI_6__FREE__ # converts cluster density per cell to cluster density per unit area
	base_fluor=base_fluor_28_ROI_6__FREE__

	K11     4.6                  #  Equilibrium association constant (/nM). The constant characterizes binding of EGF with EGFR, which is not crosslinked with other EGFR via the ectodomain.The value is taken from Macdonald and Pike (2008), where it represents EGF binding with monomeric EGFR.   
	k11r	0.02                 #  Dissociation constant (/s). This value is taken from Elleman et al. (2001). 
	k11f	K11*k11r/(NA*Vo)     #  Association constant (/nM/s). The value is derived from k11f = K11*k11r. 

	K21     5.3                  #  Equilibrium association constant (/nM). The constant characterizes binding of EGF with EGFR that is crosslinked via ectodomain with a second EGFR, and the crosslinked receptors both are free of EGF. The value is taken from Macdonald and Pike (2008). 
	k21r	0.02                 #  Single-site dissociation constaint (/s). We assume k21r to be the same as k11r. 
	k21f	K21*k21r/2/(NA*Vo)   #  Association constant (/nM/s). The value is derived from k21f = K21*k21r/2. Division by 2 is a correction to obtain the single-site association rate constant (k21f) from the effective equilibrium association constant (K21).     

	K22     0.34                 #  Equilibrium association constant (/nM). The constant characterizes binding of EGF with EGFR that is crosslinked via ectodomain with a second EGFR and the second EGFR is occupied by EGF.The value is taken from Macdonald and Pike (2008). 
	k22r	0.2                  #  Single-site dissociation constaint (/s). We assume that k22r is 10-fold larger than k11r. This assumption is consistent with the difference between K11 (or K21) and K22. 
	k22f	2*K22*k22r/(NA*Vo)   #  Single-site association constant in (/nM/s). The value is erived from k22f = 2*K22*k22r. Multiplication with 2 is applied to get single site association rate constant (k22f) from effective equilibrium association constant (K22).  

	L20     212                  #  Equlibrium crossliinking constaint (/nM). The constant characterizes ectodomain-ectodomain interaction when both receptors are free from EGF. This parameter value is based on the value of 530 dm^2/nmol reported by Macdonald and Pike (2008) and the following assumptions: a receptor surface density of 1.175e-3 nmol/dm^2 (~20 eGFP-EGFR on average for a beam with a radius of 0.3 microns) for a cell line expressing 30,000 copies of EGFR per cell, receptor density is proportional to total receptor copy number, and a total receptor concentration of approximately 0.009 nM in the experiments of Macdonald and Pike (2008) involving cells expressing 87,000 copies of EGFR per cell (from the x-intercept of the Scatchard plot shown in the inset of Fig. 5A in the paper of Macdonald and Pike). In other words, we assume that the dimensionless quantity L20*RT is approximately 1.8 for cells with 87,000 copies of EGFR per cell. Moreover, we assume that the total number of cells used in the experiments of Macdonald and Pike (for a cell line with 87,000 copies of EGFR per cell) was such that the total concentration of EGFR was approximately 0.009 nM. If we further assume that the total number of cells used was the same in all experiments of Macdonald and Pike, then the dimensional value of L20 (in units consistent with those used for total EGF concentration) is 212 /nM (obtained by dividing the dimesionless quantity L20*RT by RT when RT is expressed in the same units as those used for total EGF concentration).
	l20r	1.24                 #  Dissociation rate constant in (/s). The value is taken from Low-Nam et al. (2011).
	l20f	2*L20*l20r/(NA*Vo)   #  Association rate constant in (/nM/s). Derived from l20f = 2*L20*l20r. Multiplication factor 2 is applied because the reactant pair are the same species. 

	L21     244                  #  Equilibrium crosslinking constant (/nM). The constant characterizes ectodomain-ectodomain interaction when only one receptor is bound to EGF. The value is derived from the detailed balance relation, L21 = K21*L20/K11. 
	l21r	0.738                #  Dissociation rate constant in (/s). The value is taken from Low-Nam et al. (2011).
	l21f    L21*l21r/(NA*Vo)     #  Association rate constant (/nM/s). The value is derived from l21f = L21*l21r.

	L22     18.0                 #  Equilibrium crosslinking constant (/nM). The constant characterizes ectodomain-ectodomain interaction when both receptors are bound to EGF. The value is derived from the detailed balance relation, L22 = K22*L21/K11. 
	l22r	0.272                #  Dissociation rate constant in (/s). The value is taken from Low-Nam et al. (2011).
	l22f    2*L22*l22r/(NA*Vo)   #  Association rate constant (/nM/s). The value is derived from l22f = 2*L22*l22r. Multiplication factor 2 is applied because the reactant pair are the same species.

	k_o     6.0*k_o_factor__FREE__                  #  Rate constant for ligand-mediated activating conformation change in the cytosolic tail of EGFR (/s). The value is obtained from fitting.
	k_c     1.6*k_c_factor__FREE__                  #  Rate constant for ligand-independent deactivating conformation change in the cytosolic tail of EGFR (/s). The value is obtained from fitting.    

	kaf		15.4/(NA*Vo)*kaf_factor__FREE__         #  Rate constant for EGFR tail-tail association mediated by EGFR kinase domain and juxtamembrane domains (/s). The value is obtained from fitting. 
	kar     8.89*kar_factor__FREE__                 #  Rate constant for EGFR tail-tail dissociation (/s). The value is obtained from model fitting.  

	kp      1                    #  EGFR phosphorylation rate constant (/s). The value is consistent with data in Kleiman et al. (2011).  
	kdp     1                    #  EGFR dephoshporylation rate constant (/s). The value is consistent with data in Kleiman et al. (2011). 
	  
	chi_r	4.37e+04*(NA*Vo)*chi_r_factor__FREE__     #  Enhancement factor for ring-closure reactions (nM). The value is obtained from fitting.  

	p0 1
	p1 0.8586885428
	p2 0.7664864184
	p3 0.7037521829
	p4 0.6450543197
	p5 0.5951347692
	p6 0.5611015364
	p7 0.5280469419
	p8 0.5075838342

	# average of all measurements for dataset 1 (Fig. 2B)
	#avg1 34.5 # (clusters per square micron)
	# average of all measurements for dataset 2 (Fig. 3B)
	#avg2 25.6 # (clusters per square micron)
	# average of all measurements for dataset 3 (Fig. 2D)
	#avg3 0.578 # (arbitrary units, relative fluorescence intensity) 
	# average of all measurements for dataset 4 (Fig. 3D)
	#avg4 0.75 # (arbitrary units, relative fluorescence intensity)

	# scaling factors for preprocessed datasets
	#   These scaling factors are used to relate model outputs to measurements
	#   when each dataset has been scaled so that the average of all measurements is 1.
	#alpha1_pre=2.82e-5 # /(molecule/cell)
	#alpha2_pre=3.20e-5 # /(molecule/cell)
	#alpha3_pre=4.05e-5 # /(molecule/cell)
	#alpha4_pre=2.80e-5 # /(molecule/cell)

	# scaling factors for unprocessed datasets 1-4
	#   Each scaling factor can be used to relate a model output to a measurement.
	#   dataset 1 of Fig. 2B (dose-response data; EGFR cluster density vs. EGF dose)
	#   alpha1*Clusters=measurement value
	#alpha1=alpha1_pre*avg1 # (clusters per square micron)/(molecule/cell)
	#   dataset 2 of Fig. 3B (time-series data; EGFR cluster density vs. time, 30 nM EGF)
	#   alpha2*Clusters=measurement value
	#alpha2=alpha2_pre*avg2  # (clusters per square micron)/(molecule/cell)
	#   dataset 3 of Fig. 2D (dose-response data; EGFR phosphorylation vs. EGF dose)
	#   alpha3*pEGFR=measurement value
	#alpha3=alpha3_pre*avg3  # (a.u.)/(molecule/cell)
	#   dataset 4 of Fig. 3D (time-series data; EGFR phosphorylation vs. time, 30 nM EGF)
	#   alpha4*pEGFR=measurement value
	#alpha4=alpha4_pre*avg4  # (a.u.)/(molecule/cell)

	# In the absence of ligand there is a monomer-dimer equilibrium.
	# Monomer abundance is given by MT, and dimer abundance is given by DT. 
	#KD = 2*l20r/l20f
	#term = -1 + sqrt(1+8*RT/KD)
	#MT = term*KD/4
	#DT = term*term*KD/16

	# flag that when set to 1 results in rates that are compatible with the ODE and SSA BioNetGen simulation methods
	# when it is set to 0, it results in rates compatible with NFsim interpretation due to a bug in product molecularity constraints
	bng_compatible 0

	# parameter for gathering all free EGF into a population molecule (for NFsim simulations)
	gather 1e8

end parameters

begin molecule types
	EGF(rec)
	EGFR(back,lig,cd~c~o)
	EGF_pop()	population
end molecule types

begin seed species
	EGF(rec)	            LT_exp*bng_compatible
	EGFR(back,lig,cd~c)	    RT_exp
	EGF_pop()	            LT_exp*(1-bng_compatible)
	#EGFR(back!1,lig,cd~c,GFP~1).EGFR(back!1,lig,cd~c,GFP~1) 0
end seed species

begin observables

	# NB: observables will report # per subvolume (not # per cell), where subvolume size is determined by f.
	# It is necessary to divide by f to obtain # per cell.
	# However, observables cannot be scaled directly.
	# To scale the value of an observable, it is necessary to define an appropriate function.
	# Here's an example:
	# scaled_obs()=obs/f # this function converts # per subvolume to # per cell

	# Unbound EGF
	Molecules EGFfree EGF(rec)

	# Ligand-free EGFR
	Molecules EGFRfree EGFR(lig)

	Molecules all_receptors EGFR()

	# Clusters 
	#   The observable definition below considers EGFR oligomers up to size 20 (i.e., oligomers containing 20 copies of EGFR).
	#   Oligomers of size 10+ only very rarely form (results not shown).
	#Species Clusters EGFR==1 EGFR==2 EGFR==3 EGFR==4 EGFR==5 EGFR==6 EGFR==7 EGFR==8 EGFR==9 EGFR==10 \
	#                 EGFR==11 EGFR==12 EGFR==13 EGFR==14 EGFR==15 EGFR==16 EGFR==17 EGFR==18 EGFR==19 EGFR==20

	# EGFR monomer
	Species monomer EGFR==1

	# EGFR dimer
	Species dimer EGFR==2

	# EGFR trimer
	Species trimer EGFR==3

	# EGFR tetramer
	Species tetramer EGFR==4

	# higher-order oligomers up to 20-mers
	Species pentamer EGFR==5
	Species hexamer EGFR==6
	#Species undecamer EGFR==11
	#Species dodecamer EGFR==12
	#Species tridecamer EGFR==13
	#Species tetradecamer EGFR==14
	#Species pentadecamer EGFR==15
	#Species hexadecamer EGFR==16
	#Species heptadecamer EGFR==17
	#Species octadecamer EGFR==18
	#Species nonadecamer EGFR==19
	#Species icosadecamer EGFR==20

	# Phosphorylated-EGFR
	#Molecules pEGFR  EGFR(Y~p)

end observables

begin functions

	# The functions below #generate outputs that can be directly compared to
	#   preprocessed data of Kozer et al. (2013).
	#   We need to divide observables by f to obtain quantities with units of # per cell rather than units of # per subvolume.
	#pre1_dose()=alpha1_pre*Clusters/f # .scan file output (Fig. 2B)
	#pre2_time()=alpha2_pre*Clusters/f # .gdat file output (Fig. 3B)
	#pre3_dose()=alpha3_pre*pEGFR/f # .scan file output (Fig. 2D)
	#pre4_time()=alpha4_pre*pEGFR/f # .gdat file output (Fig. 3D)

	# The functions below #generate outputs that can be directly compared to
	#   the (unprocessed) data reported by Kozer et al. (2013).
	#   We need to divide observables by f to obtain quantities with units of # per cell rather than units of # per subvolume.
	#out1_cDens_dose()=alpha1*Clusters/f # .scan file output (Fig. 2B)
	#out2_cDens_time()=alpha2*Clusters/f # .gdat file output (Fig. 3B)
	#out3_pEGFR_dose()=alpha3*pEGFR/f # .scan file output (Fig. 2D)
	#out4_pEGFR_time()=alpha4*pEGFR/f # .gdat file output (Fig. 3D)

	#receptors_in_small_oligo()=(1*monomer+2*dimer+3*trimer+4*tetramer)/f
	#receptors_in_large_oligo()=(5*pentamer+6*hexamer+7*heptamer+8*octamer+9*nonamer+10*decamer\
	#                           +11*undecamer+12*dodecamer+13*tridecamer+14*tetradecamer\
	#                           +15*pentadecamer+16*hexadecamer+17*heptadecamer+18*octadecamer\
	#                           +19*nonadecamer+20*icosadecamer)/f

	CD0()=ucf_exp*(p0*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p0) + trimer*(3+6*p0) + tetramer*(4+12*p0) + pentamer*(5+20*p0) + hexamer*(6+30*p0)) + base_fluor
	CD1()=ucf_exp*(p1*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p1) + trimer*(3+6*p1) + tetramer*(4+12*p1) + pentamer*(5+20*p1) + hexamer*(6+30*p1)) + base_fluor
	CD2()=ucf_exp*(p2*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p2) + trimer*(3+6*p2) + tetramer*(4+12*p2) + pentamer*(5+20*p2) + hexamer*(6+30*p2)) + base_fluor
	CD3()=ucf_exp*(p3*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p3) + trimer*(3+6*p3) + tetramer*(4+12*p3) + pentamer*(5+20*p3) + hexamer*(6+30*p3)) + base_fluor
	CD4()=ucf_exp*(p4*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p4) + trimer*(3+6*p4) + tetramer*(4+12*p4) + pentamer*(5+20*p4) + hexamer*(6+30*p4)) + base_fluor
	CD5()=ucf_exp*(p5*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p5) + trimer*(3+6*p5) + tetramer*(4+12*p5) + pentamer*(5+20*p5) + hexamer*(6+30*p5)) + base_fluor
	CD6()=ucf_exp*(p6*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p6) + trimer*(3+6*p6) + tetramer*(4+12*p6) + pentamer*(5+20*p6) + hexamer*(6+30*p6)) + base_fluor
	CD7()=ucf_exp*(p7*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p7) + trimer*(3+6*p7) + tetramer*(4+12*p7) + pentamer*(5+20*p7) + hexamer*(6+30*p7)) + base_fluor
	CD8()=ucf_exp*(p8*(monomer+2*dimer+3*trimer+4*tetramer+5*pentamer+6*hexamer)^2)/(monomer + dimer*(2+2*p8) + trimer*(3+6*p8) + tetramer*(4+12*p8) + pentamer*(5+20*p8) + hexamer*(6+30*p8)) + base_fluor

end functions

# COMPATIBLE WITH NFSIM, NOT BIONETGEN (presence of bond-breaking isomerization reactions; ring-to-chain)
begin reaction rules

	# EGF binding to EGFR not crosslinked via the ectodomain. 
	EGF(rec) + EGFR(back,lig) <-> EGF(rec!1).EGFR(back,lig!1) k11f*bng_compatible,k11r*bng_compatible
	EGF_pop() + EGFR(back,lig) -> EGF(rec!1).EGFR(back,lig!1) k11f*(1-bng_compatible)
	EGF(rec!1).EGFR(back,lig!1) -> EGF(rec) + EGFR(back,lig) k11r*(1-bng_compatible)

	# EGF binding to EGFR that is crosslinked via the ectodomain to a second EGFR and both crosslinked EGFR are free of EGF. 
	EGF(rec) + EGFR(back!1,lig).EGFR(back!1,lig) <-> EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) k21f*bng_compatible,k21r*bng_compatible
	EGF_pop() + EGFR(back!1,lig).EGFR(back!1,lig) -> EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) k21f*(1-bng_compatible)
	EGF(rec!2).EGFR(back!1,lig!2).EGFR(back!1,lig) -> EGF(rec) + EGFR(back!1,lig).EGFR(back!1,lig) k21r*(1-bng_compatible)

	# EGF binding to EGFR that is crosslinked via the ectodomain to a second EGFR and the second EGFR is bound to EGF.  
	EGF(rec) + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) <-> EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) k22f*bng_compatible,k22r*bng_compatible
	EGF_pop() + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) -> EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) k22f*(1-bng_compatible)
	EGF(rec!3).EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig!3) -> EGF(rec) + EGF(rec!1).EGFR(back!2,lig!1).EGFR(back!2,lig) k22r*(1-bng_compatible)

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and both EGFR are free of EGF.
	EGFR(back,lig) + EGFR(back,lig) <-> EGFR(back!1,lig).EGFR(back!1,lig) l20f,l20r 

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and only one EGFR is free of EGF. 
	EGFR(back,lig) + EGF(rec!1).EGFR(back,lig!1) <-> EGFR(back!2,lig).EGF(rec!1).EGFR(back!2,lig!1) l21f,l21r

	# Ectodomain-ectodomain crosslinking of two EGFR that are not tethered and both EGFR are occupied by EGF. 
	EGF(rec!1).EGFR(back,lig!1) + EGF(rec!2).EGFR(back,lig!2) <-> EGF(rec!1).EGFR(back!3,lig!1).EGF(rec!2).EGFR(back!3,lig!2) l22f,l22r

	# Ectodomain-ectodomain crosslinking of two EGFR that are tethered and both EGFR are free of EGF (ring-closure reaction)
	EGFR(cd~o!4,back,lig).EGFR(cd~o!2,back,lig).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) <-> EGFR(cd~o!4,back!1,lig).EGFR(cd~o!2,back!1,lig).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) chi_r*l20f,bng_compatible*l20r

	# Ectodomain-ectodomain crosslinking of two EGFR that are tethered and only one EGFR is free of EGF (ring-closure reaction)
	EGFR(cd~o!4,back,lig).EGFR(cd~o!2,back,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) <-> EGFR(cd~o!4,back!1,lig).EGFR(cd~o!2,back!1,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) chi_r*l21f,bng_compatible*l21r

	# Ectodomain-ectodomain crosslinking of two EGFR that are tethered and both EGFR are occuplied by EGF (ring-closure reaction)
	EGFR(cd~o!4,back,lig!+).EGFR(cd~o!2,back,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) <-> EGFR(cd~o!4,back!1,lig!+).EGFR(cd~o!2,back!1,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3) chi_r*l22f,bng_compatible*l22r

	# EGF-induced activating conformation change of EGFR cytosolic tail
	EGFR(lig!+,cd~c) -> EGFR(lig!+,cd~o) k_o

	# EGF-independent deactivating conformatoin change of EGFR cytosolic tail
	EGFR(cd~o) -> EGFR(cd~c) k_c

	# Crosslinking of conformationally-modified cytosolic tails of EGFR that are not tethered
	EGFR(cd~o) + EGFR(cd~o) <-> EGFR(cd~o!1).EGFR(cd~o!1) kaf,kar

	# Crosslinking of conformationally-modified cytosolic tails of EGFR that are tethered (ring-closure reaction)
	EGFR(cd~o,back!1).EGFR(cd~o!3,back!1).EGFR(cd~o!3,back!2).EGFR(cd~o,back!2) <-> EGFR(cd~o!4,back!1).EGFR(cd~o!3,back!1).EGFR(cd~o!3,back!2).EGFR(cd~o!4,back!2) chi_r*kaf,bng_compatible*kar

	# # Ring closure for hexamers
	# # Ectodomain-ectodomain crosslinking of two EGFR that are tethered and both EGFR are free of EGF (ring-closure reaction)
	# EGFR(cd~o!6,back,lig).EGFR(cd~o!2,back,lig).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) -> \
	# 	EGFR(cd~o!6,back!1,lig).EGFR(cd~o!2,back!1,lig).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) chi_r*l20f

	# # Ectodomain-ectodomain crosslinking of two EGFR that are tethered and only one EGFR is free of EGF (ring-closure reaction)
	# EGFR(cd~o!6,back,lig).EGFR(cd~o!2,back,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) -> \
	# 	EGFR(cd~o!6,back!1,lig).EGFR(cd~o!2,back!1,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) chi_r*l21f

	# # Ectodomain-ectodomain crosslinking of two EGFR that are tethered and both EGFR are occuplied by EGF (ring-closure reaction)
	# EGFR(cd~o!6,back,lig!+).EGFR(cd~o!2,back,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) -> \
	# 	EGFR(cd~o!6,back!1,lig!+).EGFR(cd~o!2,back!1,lig!+).EGFR(cd~o!2,back!3).EGFR(cd~o!4,back!3).EGFR(cd~o!4,back!5).EGFR(cd~o!6,back!5) chi_r*l22f

	# # Crosslinking of conformationally-modified cytosolic tails of EGFR that are tethered (ring-closure reaction)
	# EGFR(cd~o,back!1).EGFR(cd~o!3,back!1).EGFR(cd~o!3,back!2).EGFR(cd~o,back!2) -> \
	# 	EGFR(cd~o!4,back!1).EGFR(cd~o!3,back!1).EGFR(cd~o!3,back!2).EGFR(cd~o!4,back!2) chi_r*kaf

	EGF(rec) -> EGF_pop() gather*(1-bng_compatible)

end reaction rules

end model

begin actions

# next three actions should be commented when using NFsim
#setParameter("bng_compatible",1) # defaults to 0
#setParameter("f",1) # defaults to 0.01
#generate_network({overwrite=>1,max_stoich=>{EGF=>4,EGFR=>4}})

setParameter("LT_nM_exp",0)
# simulate({prefix=>"egf_1000nM",method=>"nf",t_start=>0,t_end=>300,n_steps=>1,print_functions=>1,gml=>1e7,complex=>1,get_final_state=>0})
simulate({prefix=>"S89_ExtractedData_Image0028_ROI_6",method=>"nf",t_start=>0,t_end=>300,n_steps=>1,print_functions=>1})

end actions
