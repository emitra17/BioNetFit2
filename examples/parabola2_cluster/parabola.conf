model = parabolaA.bngl, parabolaB.bngl
exp_file = parabolaA.exp, parabolaB.exp

output_dir = output/
#razi changes for test, originally it was bng_command = Simulators/BNG2.pl
#bng_command = random
bng_command = Simulators/BNG2.pl


job_name=parabola2_cluster

# Should be set to numberof CPU cores in cluster minus 1
population_size = 2

# In synchronous ga, maximim number of generations to run
max_generations= 20

# Stop when we reach this objective function value
min_fit = 0

# 1/0 = synchronous/asynchronous
synchronicity = 1

# ga = genetic algorithm
# de = differential evolution
# sa = simulated annealing
# pso = particle swarm
fit_type = ga

use_pipes = 0 #razi commented to run in windows 1

# Whether or not we're using a cluster
use_cluster = 1

# Cluster software (can be mpi, slurm, or torque)
cluster_software=BNF2mpi

#send an email when job is finished 1 true 0 false
email_when_finished=0

#email address
email_address=raquel.dias@nau.edu

#cluster_account=rd636
#cluster_queue=default

# On non-cluster fits, how many sims to run at once swarm size - 2
# parallel_count = 2 razi:commented
parallel_count = 2

# Verbosity
verbosity=3

# Whether or not to standardize simulation outputs
standardize_sim_data=0

# Whether or not to standardize .exp data
standardize_exp_data=0

# Whether or not to log transform simulation outputs
log_transform_sim_data=0

# Whether or not to divide simulation outputs by the value at t=0
divide_by_init=0

# Which objective function to use (see user manual at bionetfit.nau.edu)
objfunc=3

# In ga, whether to keep any parents unchanged between generations
keep_parents=1

# In ga, probability of swapping two parameters during breeding
swap_rate=0.5

extra_weight=0

# In ga, whether or not breeding parents must be different from each other
force_different_parents=1

delete_old_files=0

# Maximum number of simulation to run before quitting
max_num_simulations=2500000

# Maximim time to let fit run before quitting
max_fit_time=01:00:00

# Whether or not to save cluster fit output
#save_cluster_output=1

# How many simulations to average (good for noisy stochastic simulations)
smoothing=1

#seed=6

# In an asynchronous fit, output a run summary every n simulations
output_every=10

# In DE, the number of islands
num_islands=3

# In DE and SA, the mutation type
mutate_type=4

# In DE and SA, the crossover rate
cr=0.8

# In DE, how often particles migrate between islands
migration_frequency=8

# In DE, how many points to migrate during crossover
num_to_migrate=3

# In PSO, the inertia
inertia=0.82

# In PSO, the cognitive factor
cognitive = 1.49

# In PSO, the social factor
social = 1.49

#nmax = 20
nmin = 80

# In enhanced inertia, the initial inertia
inertiaInit = 1

# In enhanced inertia, the final inertia
inertiaFinal = 0.1

# Tolerances for enhanced PSO stop
abs_tolerance = 10e-4
rel_tolerance = 10e-4

# Whether or not to enable mutations in QPSO
mutate_qpso = 1

# Swarm topology in PSO, or island migration topology in DE, can be:
# ring
# toroidal
# star
# fullyconnected
# mesh
# tree
topology = fullyconnected

# PSO variant, can be:
# bbpso
# bbpsoexp
# pso (normal pso)
# qpso (quantum behaved particle swarm)
pso_type = pso

# Whether or not to use enhanced stop criteria in PSO (not sure if this works well)
enhanced_stop = 0

# Whether or not to use enhanced inertia in PSO
enhanced_inertia = 0

# Mutation parameter, probability, and factor
mutate=default 0.8 0.9


#=   1.1*A2^2+2*A2-30    or         1.1 x^2   + 2 X   - 30
#=  -1.1*A2^2+3*A2+25    or      -1.1 x^2   + 3 X    + 25
#    y()=p1*(x^2)+(p2*x)+p3
#    z()=-p1*(x^2)+(p4*x)+p5

# Free parameters
random_var=p1 0 10
random_var=p2 0 10
random_var=p3 25 35
random_var=p4 0 10
random_var=p5 20 30

#original parameters
#random_var=p1 1.1 1.1
#random_var=p2 2 2
#random_var=p3 30 30
#random_var=p4 3 3
#random_var=p5 25 25

#constraints sintax constraint=model1Param_logicalOP_model2Param
#constraint=y==y 0 0 0 0
#constraint=y>=166 0 0 12 12

#intermediate constraints


#constraint weight, any value between 0 and 1
#very small number (i.e 0.1) = fit values matter the most
#very large number (i.e 0.9) = constraints matter the most
#balanced value (i.e 0.5) = both fit and contrsaint values are equally important
constraint_weight=0.90


#Combined constraints

#1.  At X = -10  Parabola A  >  B
constraint=y>z 0 0 -10 -10

#2.  At X = -6  Parabola A  >  B
constraint=y>z 0 0 -6 -6

#3.  At X = -4  Parabola A  <  B
constraint=y<z 0 0 -4 -4

#4.  At X = 5  Parabola A  < B
constraint=y<z 0 0 5 5

#5.  At X = 7  Parabola A  <  B
#constraint=y<z 0 0 7 7

#modified
#5.  At X = 7  Parabola A  >  B
constraint=y>z 0 0 7 7


#Constraints just on A

#1.  Parabola A    At X = -10  Y >55
constraint=y>55 0 0 -10 -10
#constraint=y>25 0 0 -10 -10
#constraint=y>0 0 0 -10 -10
#constraint=y>-10 0 0 -10 -10
#constraint=y>-25 0 0 -10 -10

#constraint=y<65 0 0 -10 -10
#constraint=y<100 0 0 -10 -10

#2.  Parabola A    At X = -8  Y < 30
constraint=y<30 0 0 -8 -8
#constraint=y<45 0 0 -8 -8
#constraint=y<60 0 0 -8 -8

#constraint=y>20 0 0 -8 -8
#constraint=y>10 0 0 -8 -8


#3.  Parabola A    At X = -6  Y < 0
constraint=y<0 0 0 -6 -6
#constraint=y<10 0 0 -6 -6
#constraint=y<30 0 0 -6 -6

#constraint=y>-5 0 0 -6 -6
#constraint=y>-20 0 0 -6 -6


#4.  Parabola A    At X =  -5    Y > - 15
constraint=y>-15 0 0 -5 -5
#constraint=y>-25 0 0 -5 -5
#constraint=y>-35 0 0 -5 -5
#constraint=y>-55 0 0 -5 -5
#constraint=y>-100 0 0 -5 -5

#constraint=y<0 0 0 -5 -5
#constraint=y<15 0 0 -5 -5


#5.  Parabola A    At X =  -1    Y < - 30
constraint=y<-30 0 0 -1 -1
#constraint=y<-15 0 0 -1 -1
#constraint=y<0 0 0 -1 -1
#constraint=y<15 0 0 -1 -1
#constraint=y<30 0 0 -1 -1

#constraint=y>-35 0 0 -1 -1
#constraint=y>-50 0 0 -1 -1

#6.  Parabola A    At X =  0  Y > - 31
constraint=y>-31 0 0 0 0
#constraint=y<-15 0 0 0 0
#constraint=y<0 0 0 0 0
#constraint=y<10 0 0 0 0
#constraint=y<31 0 0 0 0

#constraint=y>-35 0 0 0 0
#constraint=y>-50 0 0 0 0

#7.  Parabola A    At X =  6    Y > 20
constraint=y>20 0 0 6 6
#constraint=y>0 0 0 6 6
#constraint=y>-10 0 0 6 6

#constraint=y<25 0 0 6 6
#constraint=y<40 0 0 6 6

#8.  Parabola A    At X =  10     Y <110
constraint=y<110 0 0 10 10
#constraint=y<180 0 0 10 10
#constraint=y<300 0 0 10 10
#constraint=y<500 0 0 10 10
#constraint=y<1000 0 0 10 10
#constraint=y<1500 0 0 10 10

#constraint=y>90 0 0 10 10
#constraint=y>80 0 0 10 10

#Constraints just on B

#1.  Parabola B    At X =  -9    Y > - 110
constraint=z>-110 0 0 -9 -9
#constraint=z>-160 0 0 -9 -9
#constraint=z>-210 0 0 -9 -9

#constraint=z<-80 0 0 -9 -9
#constraint=z<-60 0 0 -9 -9

#2.  Parabola B    At X =  -4    Y < - 3
constraint=z<-3 0 0 -4 -4
#constraint=z<10 0 0 -4 -4
#constraint=z<20 0 0 -4 -4

#constraint=z>-5 0 0 -4 -4
#constraint=z>-15 0 0 -4 -4

#3.  Parabola B    At X =  1    Y >  25
constraint=z>25 0 0 1 1
#constraint=z>0 0 0 1 1
#constraint=z>-10 0 0 1 1

#constraint=z<30 0 0 1 1
#constraint=z<50 0 0 1 1

#4.  Parabola B    At X =  5    Y < 15
constraint=z<15 0 0 5 5
#constraint=z<30 0 0 5 5
#constraint=z<60 0 0 5 5

#constraint=z>8 0 0 5 5
#constraint=z>0 0 0 5 5




